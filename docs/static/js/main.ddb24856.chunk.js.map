{"version":3,"sources":["assets/images/logo.svg","apis/user.js","apis/candidate.js","apis/public.js","apis/company.js","history.js","actions/index.js","actions/types.js","components/Signup.js","components/Login.js","components/DashBoard.js","components/company/CompanyCard.js","components/company/CompanyList.js","components/ApplyConfirm.js","components/admin/AdminDashBoard.js","components/ShowApplication.js","components/company/modals/ProfileForm.js","components/company/modals/ProfileModal.js","components/company/imageZone/modal.js","components/company/imageZone/index.js","components/company/Company.js","components/Nav.js","components/CandidateForm.js","components/CandidateCreate.js","components/App.js","reducers/userReducer.js","reducers/candiReducer.js","reducers/compReducer.js","reducers/index.js","index.js"],"names":["module","exports","token","localStorage","getItem","axios","create","baseURL","process","headers","authorization","aClient","createHashHistory","errMsgReset","type","fetchCandi","candidateId","dispatch","a","console","log","history","push","candidate","get","response","payload","data","status","window","location","err","message","editComp","id","formValues","company","put","Signup","onSubmit","toSend","props","signUp","renderError","error","touched","active","confirmPassword","className","renderServerErr","errMsg","renderInput","tag","input","label","placeholder","meta","autoComplete","renderOptions","values","referType","referral","Fragment","Field","name","component","value","this","handleSubmit","React","Component","formWrapped","reduxForm","form","validate","errors","email","password","connect","user","post","Login","logIn","DashBoard","CompanyCard","onClick","clickToCompany","compId","image","alt","src","title","CompanyList","renderCompany","companyList","map","company_name_en","key","_id","fetchComps","companylist","publicApi","ApplyConfrim","AdminDashBoard","approve","e","target","getAttribute","candiId","approveCandi","renderCandiRow","candidates","moment","createdAt","format","company_name_chi","rel","href","website","style","cursor","news","other","applicant_email","approver","approve_status","renderCandidates","renderReturnBtn","to","fetchCandis","approverId","ShowApplication","renderStatus","match","params","width","company_email","ProfileForm","hideModal","formsValues","ProfileModal","bodyToSend","_","pick","ReactDOM","createPortal","stopPropagation","initialValues","document","querySelector","currentCompany","ProfileImgModal","onDrop","accetpedFiles","getRootProps","getInputProps","ImageZone","identifier","editable","companyId","useCallback","files","f","apiEndPoint","qs","stringify","superagent","set","attach","end","res","body","useDropzone","isDragActive","Company","state","showProfileModal","showUploadProfileModal","setState","checkProfileOwner","userId","ownerArr","owners","i","length","renderProfileEditbtn","renderUploadProfilebtn","checkOwnership","indexOf","fetchComp","logo","textAlign","open","Nav","handleLogOut","logOut","renderBtn","firstTo","firstText","renderNav","isLogIn","require","CandidateForm","plazceholder","classForInput","header","CandidateCreate","createCandi","App","fetchUser","exact","path","ApplyConfirm","render","INITIAL_STATE","combineReducers","action","setItem","removeItem","formReducer","companies","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","getElementById"],"mappings":"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","file":"static/js/main.ddb24856.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fd873979.svg\";","import axios from 'axios'\nconst token = localStorage.getItem('token')\n\nexport default axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}`,\n  'Access-Control-Allow-Origin': '*',\n  headers: { authorization: `bearer ${token}` }\n})\n","import axios from 'axios'\nconst token = localStorage.getItem('token')\n\nconst aClient = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/api/candidate`,\n  'Access-Control-Allow-Origin': '*',\n  headers: { authorization: `bearer ${token}` }\n})\n// TODO: check why this is not equivalent to\n// a->export default axios.create({});\n// a->will cause token to be null\nexport default aClient\n","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}`,\n  'Access-Control-Allow-Origin': '*'\n\n})\n","import axios from 'axios'\nconst token = localStorage.getItem('token')\n\nexport default axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/api/company`,\n  'Access-Control-Allow-Origin': '*',\n  headers: { authorization: `bearer ${token}` }\n})\n","import { createHashHistory } from 'history'\n\nexport default createHashHistory()\n","import { SIGN_UP, LOG_IN, LOG_OUT, ERR_MSG_RESET, FETCH_USER, CREATE_CANDI, FETCH_CANDI, FETCH_CANDIS, APPROVE_CANDI, FETCH_COMPS, FETCH_COMP, EDIT_COMP } from './types'\nimport user from '../apis/user'\nimport candidate from '../apis/candidate'\nimport publicApi from '../apis/public'\nimport company from '../apis/company'\nimport history from '../history'\n\nconst token = localStorage.getItem('token')\n\nexport const signUp = formValues => async dispatch => {\n  // redux thunk will take the returned function and invoke it, after that, it will pass it back to the dispatch and go through reduc thunk again. this time, the disptch is return a plain opbject which redux thunk will not do anything but pass it through.\n  try {\n    const response = await user.post('./signup', { formValues })\n    dispatch({\n      type: SIGN_UP,\n      payload: response.data\n    })\n    // implement programmatic navigation\n    history.push('/')\n  } catch (err) {\n    dispatch({\n      type: SIGN_UP,\n      payload: { err: err.response.data.message }\n    })\n  }\n}\n\nexport const logIn = formValues => async dispatch => {\n  try {\n    const response = await user.post('./login', { formValues })\n    dispatch({\n      type: LOG_IN,\n      payload: response.data\n    })\n    history.push('/')\n  } catch (err) {\n    if (err.response && err.response.status) {\n      dispatch({\n        type: LOG_IN,\n        payload: { err: err.response.data.message }\n      })\n    }\n  }\n}\n\nexport const logOut = () => dispatch => {\n  history.push('/')\n  dispatch({\n    type: LOG_OUT\n  })\n}\n\nexport const errMsgReset = () => {\n  return {\n    type: ERR_MSG_RESET\n  }\n}\n\nexport const fetchUser = () => async dispatch => {\n  try {\n    const response = await user.get('./profile')\n    dispatch({\n      type: FETCH_USER,\n      payload: response.data\n    })\n  } catch (err) {\n    console.log(err.response.data.message)\n  }\n}\n\nexport const createCandi = formValues => async dispatch => {\n  if (!token) {\n    history.push('/login')\n  }\n  try {\n    const response = await candidate.post('/create', { formValues })\n\n    dispatch({\n      type: CREATE_CANDI,\n      payload: response.data\n    })\n    history.push('/apply/success')\n  } catch (err) {\n    if (err.response.status === 403) {\n      window.location = '#/login'\n    }\n    dispatch({\n      type: CREATE_CANDI,\n      payload: { err: err.response.data.message }\n    })\n  }\n}\n\nexport const fetchCandi = (candidateId) => async dispatch => {\n  console.log('candiId', candidateId)\n  if (!token) {\n    history.push('/login')\n  }\n  try {\n    const response = await candidate.get(`/${candidateId}`)\n    dispatch({\n      type: FETCH_CANDI,\n      payload: response.data\n    })\n  } catch (err) {\n    if (err.response.status === 403) {\n      window.location = '#/login'\n    }\n    dispatch({\n      type: FETCH_CANDI,\n      payload: { err: err.response.data.message }\n    })\n  }\n}\n\nexport const fetchCandis = () => async dispatch => {\n  try {\n    console.log('fetchCandis')\n    console.log('token in browser', localStorage.getItem('token'))\n    const response = await candidate.get('/all')\n    dispatch({\n      type: FETCH_CANDIS,\n      payload: response.data\n    })\n  } catch (err) {\n    // if (err.response.status === 403) {\n    //   window.location = '#/login';\n    // }\n    console.log('err for fetchCandis', err)\n    dispatch({\n      type: FETCH_CANDIS,\n      payload: { err: err.response.data.message }\n    })\n  }\n}\n\nexport const approveCandi = (candiId, approverId) => async dispatch => {\n  try {\n    const response = await candidate.post(`/approve/${candiId}`, { approverId })\n    dispatch({\n      type: APPROVE_CANDI,\n      payload: response.data\n    })\n  } catch (err) {\n    dispatch({\n      type: APPROVE_CANDI,\n      payload: { err: err.response.data.message }\n    })\n  }\n}\n\nexport const fetchComps = () => async dispatch => {\n  try {\n    const response = await publicApi.get('/company/all')\n    dispatch({\n      type: FETCH_COMPS,\n      payload: response.data\n    })\n  } catch (err) {\n    dispatch({\n      type: FETCH_COMPS,\n      payload: { err: err.response ? err.response.data.message : '' }\n    })\n  }\n}\n\nexport const fetchComp = (id) => async dispatch => {\n  try {\n    const response = await publicApi.get(`/company/${id}`)\n    dispatch({\n      type: FETCH_COMP,\n      payload: response.data\n    })\n  } catch (err) {\n    dispatch({\n      type: FETCH_COMP,\n      payload: { err: 'err.response.data.message' }\n    })\n  }\n}\n\nexport const editComp = (id, formValues) => async dispatch => {\n  try {\n    const response = await company.put(`/edit/${id}`, formValues)\n    console.log(response.data)\n    dispatch({\n      type: EDIT_COMP,\n      payload: response.data\n    })\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: EDIT_COMP,\n      payload: { err: err.response.data.message }\n    })\n  }\n}\n","export const SIGN_UP = 'SIGN_UP'\nexport const LOG_IN = 'LOG_IN'\nexport const LOG_OUT = 'LOG_OUT'\nexport const FETCH_USER = 'FETCH_USER'\nexport const ERR_MSG_RESET = 'ERR_MSG_RESET'\nexport const CREATE_CANDI = 'CREATE_CANDI'\nexport const FETCH_CANDI = 'FETCH_CANDI'\nexport const FETCH_CANDIS = 'FETCH_CANDIS'\nexport const APPROVE_CANDI = 'APPROVE_CANDI'\nexport const FETCH_COMPS = 'FETCH_COMPS'\nexport const FETCH_COMP = 'FETCH_COMP'\nexport const EDIT_COMP = 'EDIT_COMP'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signUp, errMsgReset } from '../actions'\nimport { Field, reduxForm } from 'redux-form'\n\nclass Signup extends React.Component {\n  componentWillUnmount () {\n    this.props.errMsgReset()\n  }\n\n  onSubmit = (formValues) => {\n    console.log(formValues)\n    const toSend = { ...formValues, type: 'normal' }\n    console.log(toSend)\n    this.props.signUp(toSend)\n  };\n\n  renderError = ({ error, touched, active }) => {\n    if (touched && error) {\n      if (!active && error.confirmPassword) {\n        return (\n          <div className=\"ui error message\">\n            <div className=\"header\">{error}</div>\n          </div>\n        )\n      }\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      )\n    }\n  };\n\n  renderServerErr = () => {\n    if (this.props.errMsg) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{this.props.errMsg}</div>\n        </div>\n      )\n    }\n  };\n\n  renderInput = ({ tag, input, label, placeholder, meta, type }) => {\n    let className = 'required field'\n    if (meta.error && meta.touched) {\n      className = 'field error'\n    }\n\n    if (tag === 'refer') {\n      className = 'field'\n    }\n    console.log(className)\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input\n          {...input}\n          placeholder={placeholder}\n          autoComplete=\"off\"\n          type={type}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  };\n\n  renderOptions = () => {\n    if (this.props.formValues && this.props.formValues.values) {\n      const referType = this.props.formValues.values.referral\n      if (referType === 'social_media') {\n        return (\n          <React.Fragment>\n            <label>\n              <Field\n                name=\"referral_notes\"\n                component=\"input\"\n                type=\"radio\"\n                value=\"Facebook\"\n                tag=\"refer\"\n              />{' '}\n              Facebook\n            </label>\n            <label>\n              <Field\n                name=\"referral_notes\"\n                component=\"input\"\n                type=\"radio\"\n                value=\"LinkedIn\"\n                tag=\"refer\"\n              />{' '}\n              LinkedIn\n            </label>\n            <label>\n              <Field\n                name=\"referral_notes\"\n                component=\"input\"\n                type=\"radio\"\n                value=\"Other\"\n                tag=\"refer\"\n              />{' '}\n              Other\n            </label>\n          </React.Fragment>\n        )\n      } else if (referType === 'accelerator') {\n        return (\n          <React.Fragment>\n            <Field\n              name=\"referral_notes\"\n              component={this.renderInput}\n              type=\"text\"\n              label=\"please put the name of the accelerator\"\n              tag=\"refer\"\n            />\n          </React.Fragment>\n        )\n      } else if (referType === 'VC') {\n        return (\n          <React.Fragment>\n            <Field\n              name=\"referral_notes\"\n              component={this.renderInput}\n              type=\"text\"\n              tag=\"refer\"\n              label=\"please put the name of the VC\"\n            />\n          </React.Fragment>\n        )\n      } else if (referType === 'friend') {\n        return (\n          <React.Fragment>\n            <Field\n              name=\"referral_notes\"\n              component={this.renderInput}\n              type=\"text\"\n              label=\"please put the name\"\n              tag=\"refer\"\n            />\n          </React.Fragment>\n        )\n      } else if (referType === 'other') {\n        return (\n          <React.Fragment>\n            <Field name=\"referral_notes\" component=\"textarea\" tag=\"refer\" label=\"Please specific the information.\"/>\n\n          </React.Fragment>\n        )\n      }\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"signup\">\n        <div className=\"ui grid container \">\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n              >\n                <div className=\"ui huge header\">Signup</div>\n\n                <Field\n                  name=\"name\"\n                  component={this.renderInput}\n                  label=\"Your Name\"\n                  placeholder=\"Your Name\"\n                  type=\"text\"\n                />\n                <Field\n                  name=\"email\"\n                  component={this.renderInput}\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                />\n                <Field\n                  name=\"password\"\n                  component={this.renderInput}\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n                <Field\n                  name=\"confirmPassword\"\n                  component={this.renderInput}\n                  label=\"Confirm Password\"\n                  placeholder=\"Confirm Password\"\n                  type=\"password\"\n                />\n                <div className=\"ui small header\">Referrals (optional)</div>\n                <Field name=\"referral\" component=\"select\">\n                  <option />\n                  <option value=\"social_media\">Social Media</option>\n                  <option value=\"accelerator\">Accelerator</option>\n                  <option value=\"VC\">VC</option>\n                  <option value=\"friend\">Friend</option>\n                  <option value=\"other\">Other</option>\n                </Field>\n                {this.renderOptions()}\n                <button className=\"ui button\" type=\"submit\">\n                  Sign up\n                </button>\n                {this.renderServerErr()}\n              </form>\n            </div>\n            <div className=\"column\"></div>\n          </div>\n\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <div className=\"ui divider\"></div>\n              {/* <GoogleAuth/> */}\n            </div>\n            <div className=\"column\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {}\n  if (!formValues.email) {\n    errors.email = 'You must enter an email.'\n  }\n  if (!formValues.password) {\n    errors.password = 'You must enter an password.'\n  }\n  if (!formValues.confirmPassword) {\n    errors.confirmPassword = 'Please confirm the password above.'\n  }\n  if (formValues.password && formValues.confirmPassword) {\n    if (formValues.password !== formValues.confirmPassword) {\n      errors.confirmPassword = 'Please make sure your password match.'\n    }\n  }\n\n  return errors\n}\n\nconst mapStateToProps = ({ user, form }) => {\n  return { user, errMsg: user.errMsg, formValues: form.signUp }\n}\n\nconst formWrapped = reduxForm({\n  form: 'signUp',\n  validate\n})(Signup)\n\nexport default connect(mapStateToProps, { signUp, errMsgReset })(formWrapped)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logIn, errMsgReset } from '../actions'\nimport { Field, reduxForm } from 'redux-form'\n\nclass Login extends React.Component {\n  componentWillUnmount () {\n    // reset props.errMsg with new Action\n    this.props.errMsgReset()\n  }\n\n  onSubmit = (formValues) => {\n    this.props.logIn(formValues)\n  };\n\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      )\n    }\n  };\n\n  renderServerErr = () => {\n    if (this.props.errMsg) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{this.props.errMsg}</div>\n        </div>\n      )\n    }\n  };\n\n  renderInput = ({ input, label, placeholder, meta, type }) => {\n    const className = `required field ${\n      meta.error && meta.touched ? 'error' : ''\n    }`\n\n    console.log('meta', meta)\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input\n          {...input}\n          placeholder={placeholder}\n          autoComplete=\"off\"\n          type={type}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  };\n\n  render () {\n    console.log(this.props)\n    return (\n      <div className=\"login\">\n        <div className=\"ui grid container \">\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n              >\n                <div className=\"ui huge header\">Log in</div>\n                <Field\n                  name=\"email\"\n                  component={this.renderInput}\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                />\n                <Field\n                  name=\"password\"\n                  component={this.renderInput}\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n\n                <button className=\"ui button\" type=\"submit\">\n                  Log in\n                </button>\n                {this.renderServerErr()}\n              </form>\n            </div>\n            <div className=\"column\"></div>\n          </div>\n\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <div className=\"ui divider\"></div>\n              {/* <GoogleAuth/> */}\n            </div>\n            <div className=\"column\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {}\n  if (!formValues.email) {\n    errors.email = 'You must enter an email.'\n  }\n  if (!formValues.password) {\n    errors.password = 'You must enter an password.'\n  }\n  return errors\n}\n\nconst mapStateToProps = ({ user }) => {\n  return { user, errMsg: user.errMsg }\n}\n\nconst formWrapped = reduxForm({\n  form: 'logIn',\n  validate\n})(Login)\n\nexport default connect(mapStateToProps, { logIn, errMsgReset })(formWrapped)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass DashBoard extends React.Component {\n  render () {\n    return (\n      <div>\n        <h2>This is Dashboard\n        </h2>\n\n      </div>\n    )\n  }\n}\n\nexport default connect(null)(DashBoard)\n","import React from 'react'\n\nconst CompanyCard = (props) => {\n  return (\n\n    <div className=\"ui card\" onClick={() => props.clickToCompany(props.compId)}>\n\n      <div className=\"image\">\n        {props.image ? <img alt=\"company_logo\" src={props.image} /> : <img alt=\"company_logo\" src={process.env.PUBLIC_URL + '/logoDefault.png'} /> }\n\n      </div>\n      <div className=\"content\">\n        <div className=\"header\">{props.title}</div>\n        <div className=\"description\">\n          Kristy is an art director living in New York.\n        </div>\n      </div>\n      <div className=\"extra content\">\n        <div className=\"ui blue labels\">\n          <div className=\"ui label\">\n        Happy\n          </div>\n          <div className=\"ui label\">\n        Smart\n          </div>\n          <div className=\"ui label\">\n        Insane\n          </div>\n          <div className=\"ui label\">\n        Exciting\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  )\n}\n\nexport default CompanyCard\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchComps } from '../../actions'\nimport CompanyCard from './CompanyCard'\nimport history from '../../history'\n\nclass CompanyList extends React.Component {\n  componentDidMount () {\n    this.props.fetchComps()\n  }\n\n  clickToCompany = (id) => {\n    history.push(`/company/${id}`)\n  }\n\n  renderCompany = () => {\n    console.log(this.props.companyList)\n    return this.props.companyList.map(company => {\n      return <CompanyCard title={company.company_name_en} key={company._id} clickToCompany={this.clickToCompany} compId={company._id}/>\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"ui container\">\n        <h2>This is CompanyList</h2>\n        <div>{this.props.email ? this.props.email : 'no email'}</div>\n        <div className=\"ui link cards\">{this.props.companyList && this.renderCompany()}</div>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = ({ user, company }) => {\n  return { email: user.email, companyList: company.companylist }\n}\nexport default connect(mapStateToProps, { fetchComps })(CompanyList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport history from '../history'\n\nclass ApplyConfrim extends React.Component {\n  render () {\n    return (\n      <div className=\"apply-confirm\">\n        <div className=\"ui grid container\">\n\n          <div className=\"five wide column\"></div>\n          <div className=\"six wide column\">\n            <div className=\"ui medium header\">\n              Your application is confirmed.\n            </div>\n            <div className=\"confirm-text\">We will send email to:<br/>\n              {this.props.candidate.email} <br/>after the application is approved.\n            </div>\n            <button className=\"ui button\" onClick={() => history.push('/')}>Back to Home</button>\n\n          </div>\n          <div className=\"five wide column\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ candidate }) => {\n  return { candidate }\n}\n\nexport default connect(mapStateToProps)(ApplyConfrim)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchCandis, approveCandi, fetchCandi } from '../../actions'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nclass AdminDashBoard extends React.Component {\n  componentDidMount () {\n    this.props.fetchCandis()\n    // this.props.fetchCandi(\"5ee00f0d2899d90f1cdbb40a\");\n  }\n\n  approve = (e) => {\n    console.log(e.target.getAttribute('value'))\n    const candiId = e.target.getAttribute('value')\n    this.props.approveCandi(candiId, this.props.user._id)\n  }\n\n  renderCandiRow = () => {\n    const Arr = this.props.candidates\n    return Arr.map(candidate => {\n      return (\n        <tr key={candidate._id}>\n          <td>{moment(candidate.createdAt).format('l')}</td>\n          <td>{candidate.company_name_en}</td>\n          <td>{candidate.company_name_chi}</td>\n          <td><a target=\"_blank\" rel=\"noopener noreferrer\" href={candidate.website} style={{ cursor: 'pointer' }}>{candidate.website}</a></td>\n          <td><a target=\"_blank\" rel=\"noopener noreferrer\" href={candidate.news} style={{ cursor: 'pointer' }}>{candidate.news}</a></td>\n          <td><a target=\"_blank\" rel=\"noopener noreferrer\" href={candidate.other} style={{ cursor: 'pointer' }}>{candidate.other}</a></td>\n          <td>{candidate.applicant_email}</td>\n          <td>{candidate.approver ? candidate.approver.name : ''}</td>\n          {!candidate.approve_status ? <td><div value={`${candidate._id}`} className=\"ui small button\" onClick={this.approve}>\n      Approve\n          </div></td> : <td><div className=\"ui small button disabled\">\n    Approved\n          </div></td>}\n\n        </tr>\n      )\n    })\n  }\n\n  renderCandidates = () => {\n    console.log(this.props.candidates)\n    return (\n      <table className=\"ui collapsing unstackable table\">\n        <thead>\n          <tr>\n            <th>Apply At</th>\n            <th>Company Name</th>\n            <th>公司名稱</th>\n            <th>Website</th>\n            <th>News/Media</th>\n            <th>Other Material</th>\n            <th>Contact Email</th>\n            <th>Approve by</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.candidates && this.renderCandiRow()}\n        </tbody>\n      </table>\n    )\n  }\n\n  renderReturnBtn = () => {\n    return (\n      <React.Fragment>\n        <div className=\"ui container\">\n          <div className=\"ui medium header\">This page required admin access. Please log in as admin or go back to home page.\n          </div>\n          <Link to='/' className=\"ui button primary\">Back to home</Link>\n        </div>\n\n      </React.Fragment>\n    )\n  }\n\n  render () {\n    return (\n      <div className=\"admin-dashboard\">\n        {this.props.user.type !== 'super' ? this.renderReturnBtn()\n\n          : <div className=\"ui\">\n            {this.renderCandidates()}\n          </div>\n        }</div>\n\n    )\n  }\n}\n\nconst mapStateToProps = ({ candidate, user }) => {\n  return { user, candidates: candidate.candidates, errMsg: candidate.errMsg }\n}\n\nexport default connect(mapStateToProps, { fetchCandis, approveCandi, fetchCandi })(AdminDashBoard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchCandi } from '../actions'\n\nclass ShowApplication extends React.Component {\n  componentDidMount () {\n    this.props.fetchCandi(this.props.match.params.id)\n  }\n\n  onSubmit = (formValues) => {\n    console.log(formValues)\n  };\n\n  renderStatus = () => {\n    const status = this.props.candidate.approve_status\n    if (status === true) {\n      return (\n        <div className=\"ui green label\">Approved</div>\n      )\n    } else {\n      return <div className=\"ui yellow label\">Pending</div>\n    }\n  }\n\n  render () {\n    if (!this.props.candidate) {\n      return <div>Loading</div>\n    }\n\n    return (\n      <div className=\"show-application\">\n        <div className=\"ui grid container\">\n          <div className=\"ui vertical segment\" style={{ width: '100%' }}>\n            <h2 className=\"uileft floated header\">Your Application</h2>\n            <div>\n              {this.props.candidate && this.renderStatus()}\n            </div>\n            <div className=\"ui clearing divider\"></div>\n            <div className=\"ui grid\">\n              <div className=\"one wide column\"></div>\n              <div className=\"five wide column\">\n                <div className=\"ui small header\">Company Name in English</div>\n                <div>{this.props.candidate.company_name_en}</div>\n              </div>\n              <div className=\"five wide column\">\n                <div className=\"ui small header\">Company Name in Chinese</div>\n                <div>{this.props.candidate.company_name_chi}</div>\n              </div>\n              <div className=\"five wide column\">\n                <div className=\"ui small header\">Company Contact Email</div>\n                <div>{this.props.candidate.company_email}</div></div>\n              <div className=\"one wide column\"></div>\n              <div className=\"five wide column\">\n                <div className=\"ui small header\">Company Website</div>\n                <div>{this.props.candidate.website}</div></div>\n              <div className=\"five wide column\">\n                <div className=\"ui small header\">News/Media</div>\n                <div>{this.props.candidate.news}</div></div>\n              <div className=\"five wide column\">\n                <div className=\"ui small header\">Other support resource</div>\n                <div>{this.props.candidate.other}</div></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user, candidate, form }) => {\n  return { candidateId: user.candidate, candidate: candidate.candidate }\n}\n\nexport default connect(mapStateToProps, { fetchCandi })(\n  ShowApplication\n)\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nclass ProfileForm extends React.Component {\n  renderInput = ({ input, label, placeholder, meta, type }) => {\n    return (\n      <div className=\"required field\">\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} autoComplete=\"off\" type={type}/>\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.props.onSubmit)}>\n        <Field\n          name=\"company_name_en\"\n          component={this.renderInput}\n          label=\"Company Name in English\"\n          placeholder=\"\"\n          type=\"text\"\n        />\n        <Field\n          name=\"company_email\"\n          component={this.renderInput}\n          label=\"Contact Email\"\n          placeholder=\"\"\n          type=\"tel\"\n        />\n        <Field\n          name=\"website\"\n          component={this.renderInput}\n          label=\"Company Website\"\n          placeholder=\"\"\n          type=\"text\"\n        />\n        <button className='ui button' type=\"submit\">Submit</button>\n        <div className=\"ui button\" onClick={() => this.props.hideModal()}>cancel</div>\n      </form>\n    )\n  }\n}\n\nconst validate = (formsValues) => {\n  const errors = {}\n  return errors\n}\n\nexport default reduxForm({\n  form: 'profileForm',\n  validate\n})(ProfileForm)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport ProfileForm from './ProfileForm'\nimport { editComp } from '../../../actions/index'\nimport _ from 'lodash'\n\nclass ProfileModal extends React.Component {\n  onSubmit = (formValues) => {\n    console.log('formValues', formValues)\n\n    const bodyToSend = _.pick(formValues, ['company_name_en', 'company_email', 'website'])\n    console.log('tosend', bodyToSend)\n    this.props.editComp(formValues._id, bodyToSend)\n    this.props.hideModal()\n  }\n\n  render () {\n    return ReactDOM.createPortal(\n      <div onClick={() => this.props.hideModal()} className=\"ui dimmer modals visible active\">\n        <div onClick={(e) => e.stopPropagation() } className=\"ui standard modal visible active\">\n          <div className=\"header\">Edit Profile</div>\n          <div className=\"content\">\n            <ProfileForm onSubmit={this.onSubmit} initialValues={this.props.company} hideModal={this.props.hideModal}/></div>\n        </div>\n      </div>,\n      document.querySelector('#modal')\n    )\n  }\n}\n\nconst mapStateToProps = ({ company }) => {\n  return { company: company.currentCompany }\n}\n\nexport default connect(mapStateToProps, { editComp })(ProfileModal)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport { editComp } from '../../../actions/index'\nimport _ from 'lodash'\nimport Dropzone from 'react-dropzone'\n\nclass ProfileImgModal extends React.Component {\n  onSubmit = (formValues) => {\n    console.log('formValues', formValues)\n\n    const bodyToSend = _.pick(formValues, ['company_name_en', 'company_email', 'website'])\n    console.log('tosend', bodyToSend)\n\n    // this.props.hideModal();\n  }\n\n  onDrop = accetpedFiles => {\n\n  }\n\n  render () {\n    return ReactDOM.createPortal(\n      <div onClick={() => this.props.hideModal()} className=\"ui dimmer modals visible active\">\n        <div onClick={(e) => e.stopPropagation() } className=\"ui standard modal visible active\">\n          <div className=\"header\">Edit Profile</div>\n          <div className=\"content\">\n            <Dropzone onDrop={this.onDrop}>\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <div className=\"drop-zone\"></div>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n            <button className='ui button' type=\"submit\">Submit</button>\n            <div className=\"ui button\" onClick={() => this.props.hideModal()}>cancel</div>\n          </div>\n        </div>\n      </div>,\n      document.querySelector('#modal')\n    )\n  }\n}\n\nconst mapStateToProps = ({ company }) => {\n  return { company: company.currentCompany }\n}\n\nexport default connect(mapStateToProps, { editComp })(ProfileImgModal)\n","import React, { useCallback } from 'react'\n// import ReactDOM from 'react-dom'\nimport superagent from 'superagent'\nimport qs from 'query-string'\nimport './index.scss'\n\nimport { useDropzone } from 'react-dropzone'\n\nconst ImageZone = ({ type, src, className, identifier = 'company_image_update', editable = false, companyId }) => {\n  const onDrop = useCallback(files => {\n    if (!editable) return\n    const f = files[0]\n    const apiEndPoint = `${process.env.REACT_APP_API_URL}/api/company/image?${qs.stringify({ type, companyId })}`\n    const token = localStorage.getItem('token')\n    // upload to api\n    superagent\n      .post(apiEndPoint)\n      .set('authorization', `bearer ${token}`)\n      .attach(identifier, f)\n      .end((err, res) => {\n        if (err) return console.error(err)\n        console.log(res.body)\n      })\n  // eslint-disable-next-line\n  }, [])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n  console.log((editable))\n  return (\n    <div>\n      <div className={`image-zone-component ${className} editable-${editable}`}>\n        {editable && <div className={`dropzone-layer ${isDragActive}`} {...getRootProps()}>\n          <input {...getInputProps()} />\n          <div className={'dropzone'}>\n            <i className=\"cloud upload icon\"></i>\n            <div className='upload-text'>upload</div>\n          </div>\n        </div>}\n        <img alt={identifier} src={src}></img>\n      </div>\n    </div>\n  )\n}\n\n// const Modal = ({ type, identifier, editable, setModal, companyId }) => {\n//   const onDrop = useCallback(files => {\n//     if(!editable) return;\n//     const f = files[0];\n//     const apiEndPoint = `${process.env.REACT_APP_API_URL}/api/utils/upload-to-s3?${qs.stringify({type, companyId})}`;\n//     const token = localStorage.getItem('token');\n//     // upload to api\n//     superagent\n//       .post(apiEndPoint)\n//       .set('authorization', `bearer ${token}`)\n//       .attach(identifier, f)\n//       .end((err, res) => {\n//         if (err) return console.error(err);\n//         console.log(res.body.result);\n//       })\n//   // eslint-disable-next-line\n//   }, [])\n\n//   const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n//   return ReactDOM.createPortal(\n//     <div onClick={() => setModal(false)} className=\"ui dimmer modals visible active image-modal-layer\">\n//       <div onClick={(e) => e.stopPropagation() } className=\"ui standard modal visible active image-modal-container\">\n//         <div className='dropzone-container' {...getRootProps()}>\n//           <input {...getInputProps()} />\n//           <div className={`${isDragActive}-dropping dropzone`}>\n//             <div className='upload-icon'><i className=\"cloud upload icon\"></i></div>\n//             <div className='upload-text'>Upload {type}</div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>,\n//     document.querySelector('#modal')\n//   )\n// }\n\nexport default ImageZone\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchComp } from '../../actions'\nimport ProfileModal from './modals/ProfileModal'\nimport ProfileImgModal from './imageZone/modal'\nimport ImageZone from './imageZone'\nimport './index.scss'\n\nclass Company extends React.Component {\n  state = {\n    showProfileModal: false,\n    showUploadProfileModal: false\n  };\n\n  hideModal = () => {\n    this.setState({\n      showProfileModal: false,\n      showUploadProfileModal: false\n    })\n  };\n\n  componentDidMount () {\n    this.props.fetchComp(this.props.match.params.id)\n  }\n\n  checkProfileOwner = () => {\n    const userId = this.props.user._id\n    const ownerArr = this.props.company.owners\n    for (let i = 0; i < ownerArr.length; i++) {\n      if (ownerArr[i] === userId) {\n        return true\n      }\n    }\n    return false\n  }\n\n  renderProfileEditbtn = () => {\n    if (this.checkProfileOwner()) {\n      return (\n        <button\n          onClick={() => this.setState({ showProfileModal: true })}\n          className=\"circular ui icon button\"\n        >\n          <i className=\"edit outline icon\"></i>\n        </button>\n      )\n    }\n  };\n\n  renderUploadProfilebtn = () => {\n    if (this.checkProfileOwner()) {\n      return (\n        <button\n          onClick={() => this.setState({ showUploadProfileModal: true })}\n          className=\"circular ui icon button\"\n        >\n          <i className=\"edit outline icon\"></i>\n        </button>\n      )\n    }\n  }\n\n  checkOwnership = () => {\n    const { user, company } = this.props\n    return user.type === 'super' || (user._id && (company.owners.indexOf(user._id) > -1))\n  }\n\n  render () {\n    if (!this.props.company) {\n      return <div>Loading</div>\n    }\n    // eslint-disable-next-line camelcase\n    const { company_email, company_name_en, website, logo } = this.props.company\n    return (\n      <div className=\"company-container\">\n        <div className=\"ui container\">\n          <div className=\"ui grid\">\n            <div className=\"two wide column\"></div>\n            <div className=\"four wide column\" style={{ textAlign: 'center' }}>\n              <ImageZone className=\"company-img\" src={logo} type='logo' editable={this.checkOwnership()} companyId={this.props.company._id} />\n            </div>\n            <div className=\"six wide column\">\n              <div className=\"company-info\">\n                <div>\n                  {/* eslint-disable-next-line camelcase */}\n                  <h1 className=\"company-name\">{company_name_en}</h1>\n                  <div className=\"ui blue labels\">\n                    <div className=\"ui label\">Happy</div>\n                    <div className=\"ui label\">Smart</div>\n                    <div className=\"ui label\">Insane</div>\n                    <div className=\"ui label\">Exciting</div>\n                  </div>\n                </div>\n\n                <div className=\"btn-group\">\n                  <div\n                    className=\"ui teal button\"\n                    onClick={() => window.open(`${website}`)}\n                  >\n                    Website\n                  </div>\n                  <a\n                    className=\"ui yellow button\"\n                    // eslint-disable-next-line camelcase\n                    href={`mailto:${company_email}`}\n                  >\n                    Contact\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"four wide column\">\n              <div>{this.props.company && this.renderProfileEditbtn()}</div>\n            </div>\n          </div>\n        </div>\n\n        {this.state.showProfileModal && <ProfileModal hideModal={this.hideModal} />}\n        {this.state.showUploadProfileModal && <ProfileImgModal hideModal={this.hideModal} />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user, company }) => {\n  return { user, company: company.currentCompany }\n}\n\nexport default connect(mapStateToProps, { fetchComp })(Company)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logOut } from '../actions'\n\nclass Nav extends React.Component {\n  handleLogOut = () => {\n    this.props.logOut()\n  };\n\n  renderBtn = (firstTo, firstText) => {\n    return (\n      <React.Fragment>\n        <div className=\"item\">\n          <Link className=\"ui button primary\" to={firstTo}>\n            {firstText}\n          </Link>\n        </div>\n        <div className=\"item\">\n          <div className=\"ui button secondary\" onClick={this.handleLogOut}>\n          Log out\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  renderNav = () => {\n    if (!this.props.user.isLogIn) {\n      return (\n        <React.Fragment>\n          <div className=\"item\">\n            <Link className=\"ui button primary\" to=\"/signup\">\n          Sign Up\n            </Link>\n          </div>\n          <div className=\"item\">\n            <Link className=\"ui button primary\" to=\"/login\">\n          Log In\n            </Link>\n          </div>\n        </React.Fragment>\n      )\n    } else if (this.props.user.type === 'normal' && !this.props.user.candidate && !this.props.candidate.candidate) {\n      return this.renderBtn(`/apply/${this.props.user._id}`, 'Add a company')\n    } else if (this.props.user.type === 'normal' && !this.props.user.company) {\n      const candiId = this.props.user.candidate ? this.props.user.candidate : this.props.candidate.candidate._id\n      return this.renderBtn(`/application/${candiId}`, 'See your application')\n    } else if (this.props.user.type === 'normal') {\n      return this.renderBtn(`/company/${this.props.user.company}`, 'My Company')\n    } else {\n      return this.renderBtn('/admin/dashboard', 'Admin Dashboard')\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"ui menu\">\n        <Link to='/'>\n          <img alt=\"twstartups logo\" src={require('../assets/images/logo.svg')} style={{}}></img>\n        </Link>\n        <div className=\"right menu\">\n          {this.renderNav()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProp = ({ user, candidate }) => {\n  return { user, candidate }\n}\n\nexport default connect(mapStateToProp, { logOut })(Nav)\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nclass CandidateForm extends React.Component {\n  renderError = ({ error, touched, active }) => {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      )\n    }\n  }\n\n  renderServerErr = () => {\n    if (this.props.errMsg) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{this.props.errMsg}</div>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, placeholder, meta, type }) => {\n    let className = 'required field'\n    if (meta.error && meta.touched) {\n      className = 'required field error'\n    }\n    if (label === 'Additional support items' || label === 'Company Name in Chinese' || label === 'News/Media link') {\n      className = 'field'\n    }\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input\n          {...input}\n          plazceholder={placeholder}\n          autoComplete=\"off\"\n          type={type}\n          className={this.props.classForInput ? this.props.classForInput : ''}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  };\n\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues)\n  }\n\n  render () {\n    return (\n      <div className=\"candidate-form\">\n        <div className=\"ui grid container\">\n          <div className=\"five wide column\"></div>\n          <div className=\"six wide column\">\n\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n              <div className=\"ui huge header\">{this.props.header}</div>\n              <div className=\"ui medium header\">Basic Information</div>\n              <Field\n                name=\"company_name_en\"\n                component={this.renderInput}\n                label=\"Company Name in English\"\n                placeholder=\"\"\n                type=\"text\"\n              />\n              <Field\n                name=\"company_name_chi\"\n                component={this.renderInput}\n                label=\"Company Name in Chinese\"\n                placeholder=\"\"\n                type=\"text\"\n              />\n              <Field\n                name=\"company_email\"\n                component={this.renderInput}\n                label=\"Contact Email\"\n                placeholder=\"\"\n                type=\"tel\"\n              />\n              <div className=\"ui medium header\">\n                Supporting Resource for Review\n              </div>\n              <Field\n                name=\"website\"\n                component={this.renderInput}\n                label=\"Company Website\"\n                placeholder=\"\"\n                type=\"text\"\n              />\n              <Field\n                name=\"news\"\n                component={this.renderInput}\n                label=\"News/Media link\"\n                placeholder=\"\"\n                type=\"text\"\n              />\n              <Field\n                name=\"other\"\n                component={this.renderInput}\n                label=\"Additional support items\"\n                placeholder=\"\"\n                type=\"text\"\n              />\n\n              <button className='ui button' type=\"submit\">Submit</button>\n\n              {this.renderServerErr()}\n            </form>\n          </div>\n          <div className=\"five wide column\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {}\n  if (!formValues.company_name_en) {\n    errors.company_name_en = 'Please enter an English company name.'\n  }\n  if (!formValues.company_name_chi) {\n    errors.company_name_chi = 'Please enter a Chinese company name.'\n  }\n  // if (formValues.company_name_chi && !formValues.company_name_chi.match(/[\\u3400-\\u9FBF]/)) {\n  //   errors.company_name_chi = \"Please enter a company name in Chinese.\"\n  // }\n  if (!formValues.website) {\n    errors.website = 'Please provide a website.'\n  }\n  if (!formValues.news) {\n    errors.news = 'Please provide a news.'\n  }\n  if (!formValues.company_email) {\n    errors.company_email = 'Please enter an email.'\n  }\n  // eslint-disable-next-line no-useless-escape\n  if (formValues.company_email && !formValues.company_email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n    errors.company_email = 'Please enter a valid email.'\n  }\n\n  return errors\n}\n\nexport default reduxForm({\n  form: 'candidateForm',\n  validate\n})(CandidateForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createCandi } from '../actions'\nimport CandidateForm from './CandidateForm'\n\nclass CandidateCreate extends React.Component {\n  onSubmit = (formValues) => {\n    console.log(formValues)\n    this.props.createCandi(formValues)\n  }\n\n  render () {\n    return (\n\n      <div className=\"ui grid container\">\n\n        <CandidateForm onSubmit={this.onSubmit} header=\"About your company...\"/>\n      </div>\n\n    )\n  }\n}\n\nexport default connect(null, { createCandi })(CandidateCreate)\n","import React from 'react'\nimport Signup from './Signup'\nimport Login from './Login'\nimport DashBoard from './DashBoard'\nimport CompanyList from './company/CompanyList'\nimport ApplyConfirm from './ApplyConfirm'\nimport AdminDashBoard from './admin/AdminDashBoard'\nimport ShowApplication from './ShowApplication'\nimport Company from './company/Company'\nimport Nav from './Nav'\nimport { fetchUser } from '../actions'\nimport { Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CandidateCreate from './CandidateCreate'\nclass App extends React.Component {\n  // fetch current user from local storage jwt\n  // if jwt -> fetch user\n  componentDidMount () {\n    const token = localStorage.getItem('token')\n    if (token) {\n      this.props.fetchUser(token)\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <Nav/>\n\n        <Switch>\n          <Route exact path=\"/\" component={CompanyList} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/dashboard/:id\" component={DashBoard} />\n          <Route exact path=\"/admin/dashboard\" component={AdminDashBoard}/>\n          <Route path=\"/apply/success\" component={ApplyConfirm} />\n          <Route exact path=\"/apply/:id\" component={CandidateCreate} />\n          <Route path=\"/application/:id\" component={ShowApplication}/>\n          <Route path=\"/company/:id\" render={(props) => (<Company key={props.match.params.id} {...props}/>)} />\n        </Switch>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  return { email: user.email }\n}\n\nexport default connect(mapStateToProps, { fetchUser })(App)\n","import { SIGN_UP, LOG_IN, LOG_OUT, FETCH_USER, ERR_MSG_RESET } from '../actions/types'\n\nconst INITIAL_STATE = {\n  email: null,\n  _id: null,\n  type: null,\n  errMsg: null,\n  candidate: null,\n  isLogIn: false,\n  company: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SIGN_UP:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    // put jwt in local storage for future verify login\n    localStorage.setItem('token', action.payload.token)\n    // return userObj\n    return { ...state, ...action.payload.user, isLogIn: true }\n  case LOG_IN:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    localStorage.setItem('token', action.payload.token)\n    return { ...state, ...action.payload.user, isLogIn: true }\n  case LOG_OUT:\n    localStorage.removeItem('token')\n    return { ...INITIAL_STATE }\n  case ERR_MSG_RESET:\n    return { ...state, errMsg: null }\n  case FETCH_USER:\n    return { ...state, ...action.payload.user, isLogIn: true }\n  default:\n    return state\n  }\n}\n","import { CREATE_CANDI, FETCH_CANDIS, FETCH_CANDI, APPROVE_CANDI } from '../actions/types'\n\nconst INITIAL_STATE = {\n  errMsg: null,\n  email: null,\n  candidate: null,\n  candidates: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CREATE_CANDI:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    return { ...state, candidate: action.payload.candidate, email: action.payload.candidate.company_email }\n  case FETCH_CANDI:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    return { ...state, candidate: action.payload.candidate, email: action.payload.candidate.company_email }\n  case FETCH_CANDIS:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n\n    return { ...state, candidates: action.payload.candidates }\n  case APPROVE_CANDI:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    return { ...state, candidate: action.payload.candidate, candidates: action.payload.candidates }\n  default:\n    return state\n  }\n}\n","import { FETCH_COMPS, FETCH_COMP, EDIT_COMP } from '../actions/types'\n\nconst INITIAL_STATE = {\n  errMsg: null,\n  companylist: null,\n  currentCompany: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCH_COMPS:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    return { ...state, companylist: action.payload.companies }\n  case FETCH_COMP:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    return { ...state, currentCompany: action.payload.company }\n  case EDIT_COMP:\n    if (action.payload.err) {\n      return { ...state, errMsg: action.payload.err }\n    }\n    return { ...state, currentCompany: action.payload.company }\n  default: return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport userReducer from './userReducer'\nimport candiReducer from './candiReducer'\nimport { reducer as formReducer } from 'redux-form'\nimport compReducer from './compReducer'\n\nexport default combineReducers({\n  user: userReducer,\n  form: formReducer,\n  candidate: candiReducer,\n  company: compReducer\n})\n","import React from 'react'\nimport App from './components/App'\nimport ReactDOM from 'react-dom'\nimport './assets/scss/styles.scss'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reducers from './reducers'\nimport history from './history'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter history={history}>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}