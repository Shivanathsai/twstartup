{"version":3,"sources":["assets/images/logo.svg","components/GoogleAuth.js","apis/user.js","history.js","actions/index.js","actions/types.js","components/Signup.js","components/Login.js","components/DashBoard.js","components/CompanyList.js","components/Nav.js","components/App.js","reducers/userReducer.js","reducers/index.js","index.js"],"names":["module","exports","GoogleAuth","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","onAuthChange","isSignedIn","get","listen","onClick","this","onSignInClick","className","renderAuthButton","React","Component","connect","state","axios","create","baseURL","createHashHistory","errMsgReset","type","Signup","onSubmit","formValues","props","signUp","renderError","error","touched","active","confirmPassword","renderServerErr","errMsg","renderInput","input","label","placeholder","meta","autoComplete","handleSubmit","Field","name","component","formWrapped","reduxForm","form","validate","errors","email","password","user","dispatch","a","post","response","payload","data","err","message","Login","logIn","console","log","history","push","DashBoard","CompanyList","Nav","handleLogOut","logOut","renderNav","Fragment","to","src","require","style","App","token","localStorage","getItem","fetchUser","exact","path","INITIAL_STATE","_id","combineReducers","action","setItem","removeItem","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6386dcba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fd873979.svg\";","import React from \"react\";\nimport { connect } from 'react-redux';\n// import { signIn } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n\n  componentDidMount(){\n  \n    window.gapi.load('client:auth2',()=> {\n      window.gapi.client.init({\n          clientId:'708463758106-0mgvmavhvulqpci65mglhkq8h30c25up.apps.googleusercontent.com',\n          scope: 'email'\n      }).then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n      })\n  });\n\n    \n  }\n\n  // onAuthChange = (isSignedIn) => {\n  //   if (isSignedIn) {\n  //     this.props.signIn(this.auth.currentUser.get().getId());      \n  //   }\n  // }\n\n  // onSignInClick=()=>{\n  //   this.auth.signIn();\n  // }\n\n\n\n  renderAuthButton() {\n    \n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign in with GoogleAuth\n        </button>\n      );\n    \n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStatesToProps = (state)=> {\n  return { isSignedIn: state.auth.isSignedIn}\n}\n\nexport default connect(mapStatesToProps)(GoogleAuth);\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://localhost:8000'\n})","import { createHashHistory } from 'history';\n\n\nexport default createHashHistory();","import { SIGN_UP, LOG_IN, LOG_OUT, ERR_MSG_RESET, FETCH_USER } from './types';\nimport user from '../apis/user';\nimport history from '../history';\n\nexport const signUp = formValues => async dispatch => {\n  //redux thunk will take the returned function and invoke it, after that, it will pass it back to the dispatch and go through reduc thunk again. this time, the disptch is return a plain opbject which redux thunk will not do anything but pass it through.\n  try {\n    const response = await user.post('./signup', {formValues});\n    dispatch({\n      type: SIGN_UP,\n      payload: response.data\n    })\n    //implement programmatic navigation\n    // history.push('/');\n  } catch (err) {\n    dispatch({\n      type: SIGN_UP,\n      payload: {err:err.response.data.message}\n    })\n  }\n    \n}\n\nexport const logIn = formValues => async dispatch => {\n  try {\n    const response = await user.post('./login', {formValues});\n    dispatch({\n      type: LOG_IN,\n      payload: response.data\n    })\n    history.push('/');\n  } catch(err) {\n    console.log(err.response.data.message)\n    dispatch({\n      type: LOG_IN,\n      payload: {err:err.response.data.message}\n    })\n  }\n    \n  \n}\n\nexport const logOut = () => {\n  return {\n    type: LOG_OUT\n  }\n}\n\nexport const errMsgReset = () => {\n  return {\n    type: ERR_MSG_RESET\n  }\n}\n\nexport const fetchUser = token => async dispatch =>{\n  console.log(token);\n  const response = await user.get(`./user/${token}`);\n  dispatch({\n    type: FETCH_USER,\n    payload: response.data\n  })\n}\n\n  \n  \n\n\n","export const SIGN_UP = 'SIGN_UP';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const FETCH_USER = 'FETCH_USER';\nexport const ERR_MSG_RESET = 'ERR_MSG_RESET';","import React from \"react\";\nimport GoogleAuth from \"./GoogleAuth\";\nimport { connect } from \"react-redux\";\nimport { signUp, errMsgReset } from \"../actions\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass Signup extends React.Component {\n  componentWillUnmount() {\n\n    this.props.errMsgReset();\n  }\n  onSubmit = (formValues) => {\n \n    this.props.signUp(formValues);\n  };\n\n  renderError = ({error,touched,active}) => {\n   if (touched && error) {\n     if (!active && error.confirmPassword) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      )\n     }\n     return (\n       <div className=\"ui error message\">\n         <div className=\"header\">{error}</div>\n       </div>\n     )\n   }\n  };\n\n  renderServerErr = () => {\n    if (this.props.errMsg) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{this.props.errMsg}</div>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, placeholder, meta, type }) => {\n    const className = `required field ${meta.error && meta.touched ? 'error': ''}`;\n    \n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} placeholder={placeholder} autoComplete='off' type={type} />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"signup\">\n        <div className=\"ui grid container \">\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n              >\n                <div className=\"ui header\">Signup</div>\n\n                <Field\n                  name=\"email\"\n                  component={this.renderInput}\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                />\n                <Field\n                  name=\"password\"\n                  component={this.renderInput}\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n                <Field\n                  name=\"confirmPassword\"\n                  component={this.renderInput}\n                  label=\"Confirm Password\"\n                  placeholder=\"Confirm Password\"\n                  type=\"password\"\n                />\n\n                <button className=\"ui button\" type=\"submit\">\n                  Sign up\n                </button>\n                {this.renderServerErr()}\n              </form>\n             \n            </div>\n            <div className=\"column\"></div>\n          </div>\n\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <div className=\"ui divider\"></div>\n              {/* <GoogleAuth/> */}\n            </div>\n            <div className=\"column\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  if (!formValues.email) {\n    errors.email = \"You must enter an email.\";\n  }\n  if (!formValues.password) {\n    errors.password = \"You must enter an password.\";\n  }\n  if (!formValues.confirmPassword) {\n    errors.confirmPassword = \"Please confirm the password above.\";\n  }\n  if (formValues.password && formValues.confirmPassword) {\n   \n     \n      if (formValues.password !== formValues.confirmPassword) {\n        errors.confirmPassword = \"Please make sure your password match.\"\n      }\n    \n  }\n \n  return errors;\n};\n\nconst mapStateToProps = ({ user }) => {\n  return { user, errMsg: user.errMsg };\n};\n\n\n\nconst formWrapped =  reduxForm({\n  form: \"signUp\",\n  validate,\n})(Signup);\n\nexport default connect(mapStateToProps,{signUp, errMsgReset})(formWrapped);","import React from \"react\";\nimport GoogleAuth from \"./GoogleAuth\";\nimport { connect } from \"react-redux\";\nimport { logIn, errMsgReset } from \"../actions\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass Login extends React.Component {\n  componentWillUnmount() {\n    //reset props.errMsg with new Action\n    this.props.errMsgReset();\n  }\n\n  onSubmit = (formValues) => {\n   \n\n    this.props.logIn(formValues);\n  };\n\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  };\n  renderServerErr = () => {\n    if (this.props.errMsg) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{this.props.errMsg}</div>\n        </div>\n      );\n    }\n  };\n  renderInput = ({ input, label, placeholder, meta, type }) => {\n    const className = `required field ${\n      meta.error && meta.touched ? \"error\" : \"\"\n    }`;\n\n    console.log('meta',meta)\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input\n          {...input}\n          placeholder={placeholder}\n          autoComplete=\"off\"\n          type={type}\n        />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  render() {\n    console.log(this.props)\n    return (\n      <div className=\"login\">\n        <div className=\"ui grid container \">\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n              >\n                <div className=\"ui header\">Log in</div>\n                <Field\n                  name=\"email\"\n                  component={this.renderInput}\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                />\n                <Field\n                  name=\"password\"\n                  component={this.renderInput}\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n\n                <button className=\"ui button\" type=\"submit\">\n                  Log in\n                </button>\n              {this.renderServerErr()}\n              </form>\n            </div>\n            <div className=\"column\"></div>\n          </div>\n\n          <div className=\"three column row\">\n            <div className=\"column\"></div>\n            <div className=\"column\">\n              <div className=\"ui divider\"></div>\n              {/* <GoogleAuth/> */}\n            </div>\n            <div className=\"column\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  if (!formValues.email) {\n    errors.email = \"You must enter an email.\";\n  }\n  if (!formValues.password) {\n    errors.password = \"You must enter an password.\";\n  }\n  return errors;\n};\n\nconst mapStateToProps = ({ user }) => {\n  return { user,errMsg: user.errMsg };\n};\n\nconst formWrapped = reduxForm({\n  form: \"logIn\",\n  validate,\n})(Login);\n\nexport default connect(mapStateToProps, { logIn,errMsgReset })(formWrapped);\n","import React from 'react';\n\n\nconst DashBoard = () => {\n  return (\n    <div>\n    <h2>This is Dashboard\n    </h2></div>\n  )\n}\n\nexport default DashBoard;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass CompanyList extends React.Component {\n  render(){\n    return (\n      <div>\n        <h2>This is CompanyList</h2>\n        <div>{this.props.email? this.props.email: 'no email'}</div>\n      </div>\n    );\n  }\n  \n};\n\nconst mapStateToProps = ({user}) => {\n  return {email: user.email}\n}\nexport default connect(mapStateToProps)(CompanyList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logOut } from '../actions';\n\nclass Nav extends React.Component {\n  handleLogOut = () => {\n    this.props.logOut();\n  };\n  renderNav = () => {\n    if (this.props.email) {\n      return(\n        <React.Fragment>\n        <div className=\"item\">\n        <Link className=\"ui button primary\" to=\"/dashboard\">\n          Dashboard\n        </Link>\n      </div>\n      <div className=\"item\">\n        <div className=\"ui button secondary\" onClick={this.handleLogOut}>\n          Log out\n        </div>\n      </div>\n      </React.Fragment>\n      )\n      \n    } else {\n      return (\n        <React.Fragment>\n        <div className=\"item\">\n        <Link className=\"ui button primary\" to=\"/signup\">\n          Sign Up\n        </Link>\n      </div>\n      <div className=\"item\">\n        <Link className=\"ui button primary\" to=\"/login\">\n          Log In\n        </Link>\n      </div>\n      </React.Fragment>\n      )\n      \n    }\n  }\n  render() {\n    return (\n      <div className=\"ui menu\">\n      <Link to='/'>\n        <img src={require(\"../assets/images/logo.svg\")} style={{}}></img>\n        </Link>\n        <div className=\"right menu\">\n          {this.renderNav()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = ({user}) =>{\n  \n  return {email: user.email};\n}\n\nexport default connect(mapStateToProp,{logOut})(Nav);\n","import React from \"react\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport DashBoard from \"./DashBoard\";\nimport CompanyList from \"./CompanyList\";\nimport Nav from './Nav';\nimport { fetchUser } from \"../actions\";\nimport { Switch, Route} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nclass App extends React.Component {\n  //fetch current user from local storage jwt\n  //if jwt -> fetch user\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.props.fetchUser(token);\n    }\n  }\n  render() {\n    console.log('props in app',this.props.email)\n    return (\n      <>\n      <Nav/>\n        <h2>Welcome {this.props.email}</h2>\n        <Switch>\n          <Route exact path=\"/\" component={CompanyList} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/dashboard\" component={DashBoard} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({user}) => {\n\n  \n  return {email:user.email}\n}\n\nexport default connect(mapStateToProps, { fetchUser })(App);\n","import { SIGN_UP, LOG_IN, LOG_OUT, FETCH_USER, ERR_MSG_RESET } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  email: null,\n  _id: null,\n  errMsg:null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_UP:\n      if (action.payload.err) {\n        return {...state, errMsg:action.payload.err}\n      }\n      //put jwt in local storage for future verify login\n      localStorage.setItem(\"token\", action.payload.token);\n      //return userObj\n      return { ...state, ...action.payload.user };\n    case LOG_IN:\n      if (action.payload.err) {\n        return {...state, errMsg:action.payload.err}\n      }\n      localStorage.setItem(\"token\", action.payload.token);\n      return { ...state, ...action.payload.user };\n    case LOG_OUT:\n      localStorage.removeItem(\"token\");\n      return { ...INITIAL_STATE };\n    case ERR_MSG_RESET:\n      return {...state, errMsg:null}\n    case FETCH_USER:\n      return { ...state, ...action.payload.user };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport { reducer as formReducer } from 'redux-form';\n\nexport default combineReducers({\n  user: userReducer,\n  form: formReducer\n})\n\n","import React from \"react\";\nimport App from \"./components/App\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/scss/styles.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose} from \"redux\";\nimport reducers from \"./reducers\";\nimport history from './history';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter history={history}>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}